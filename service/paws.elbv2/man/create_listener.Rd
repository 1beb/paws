% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.elbv2_operations.R
\name{create_listener}
\alias{create_listener}
\title{Creates a listener for the specified Application Load Balancer or Network Load Balancer}
\usage{
create_listener(LoadBalancerArn, Protocol, Port, DefaultActions,
  SslPolicy = NULL, Certificates = NULL)
}
\arguments{
\item{LoadBalancerArn}{The Amazon Resource Name (ARN) of the load balancer.}

\item{Protocol}{The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocol is TCP.}

\item{Port}{The port on which the load balancer is listening.}

\item{DefaultActions}{The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.

If the action type is \code{forward}, you can specify a single target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer or TCP for a Network Load Balancer.

[HTTPS listener] If the action type is \code{authenticate-oidc}, you can use an identity provider that is OpenID Connect (OIDC) compliant to authenticate users as they access your application.

[HTTPS listener] If the action type is \code{authenticate-cognito}, you can use Amazon Cognito to authenticate users as they access your application.

[Application Load Balancer] If the action type is \code{redirect}, you can redirect HTTP and HTTPS requests.

[Application Load Balancer] If the action type is \code{fixed-response}, you can return a custom HTTP response.}

\item{SslPolicy}{[HTTPS listeners] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.}

\item{Certificates}{[HTTPS listeners] The default SSL server certificate. You must provide exactly one default certificate. To create a certificate list, use AddListenerCertificates.}
}
\description{
Creates a listener for the specified Application Load Balancer or Network Load Balancer.
}
\details{
To update a listener, use ModifyListener. When you are finished with a listener, you can delete it using DeleteListener. If you are finished with both the listener and the load balancer, you can delete them both using DeleteLoadBalancer.

This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple listeners with the same settings, each call succeeds.

For more information, see \href{http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html}{Listeners for Your Application Load Balancers} in the \emph{Application Load Balancers Guide} and \href{http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html}{Listeners for Your Network Load Balancers} in the \emph{Network Load Balancers Guide}.
}
\examples{
# This example creates an HTTP listener for the specified load balancer
# that forwards requests to the specified target group.
create_listener(
  DefaultActions = list(
    list(
      TargetGroupArn = "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
      Type = "forward"
    )
  ),
  LoadBalancerArn = "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
  Port = 80L,
  Protocol = "HTTP"
)

# This example creates an HTTPS listener for the specified load balancer
# that forwards requests to the specified target group. Note that you must
# specify an SSL certificate for an HTTPS listener. You can create and
# manage certificates using AWS Certificate Manager (ACM). Alternatively,
# you can create a certificate using SSL/TLS tools, get the certificate
# signed by a certificate authority (CA), and upload the certificate to
# AWS Identity and Access Management (IAM).
create_listener(
  Certificates = list(
    list(
      CertificateArn = "arn:aws:iam::123456789012:server-certificate/my-server-cert"
    )
  ),
  DefaultActions = list(
    list(
      TargetGroupArn = "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
      Type = "forward"
    )
  ),
  LoadBalancerArn = "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
  Port = 443L,
  Protocol = "HTTPS",
  SslPolicy = "ELBSecurityPolicy-2015-05"
)

}
