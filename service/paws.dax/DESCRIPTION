Package: paws.dax
Title: Amazon DynamoDB Accelerator (DAX)
Version: 0.0.1
Authors@R: 
    c(person(given = "David",
             family = "Kretch",
             role = c("aut", "cre"),
             email = "david.kretch@gmail.com"),
      person(given = "Adam",
             family = "Banker",
             role = "aut",
             email = "adam.banker39@gmail.com"),
      person(given = "Amazon.com, Inc.",
             role = "cph"))
Description: DAX is a managed caching service engineered for Amazon
    DynamoDB. DAX dramatically speeds up database reads by caching
    frequently-accessed data from DynamoDB, so applications can access
    that data with sub-millisecond latency. You can create a DAX cluster
    easily, using the AWS Management Console. With a few simple
    modifications to your code, your application can begin taking
    advantage of the DAX cluster and realize significant improvements in
    read performance.
License: Apache License (>= 2.0)
Depends: 
    R (>= 3.5.1)
Imports: 
    base64enc,
    digest,
    httr,
    ini,
    jsonlite,
    xml2
Encoding: UTF-8
LazyData: true
Roxygen: list(markdown = TRUE, roclets = c("rd", "namespace", "collate"))
RoxygenNote: 6.0.1
Collate: 
    'struct.R'
    'handlers.R'
    'url.R'
    'net.R'
    'credential_providers.R'
    'credentials.R'
    'client.R'
    'config.R'
    'convert.R'
    'dateutil.R'
    'error.R'
    'handlers_core.R'
    'handlers_ec2query.R'
    'handlers_jsonrpc.R'
    'handlers_query.R'
    'handlers_rest.R'
    'handlers_restjson.R'
    'handlers_restxml.R'
    'idempotency.R'
    'jsonutil.R'
    'paws.dax_interfaces.R'
    'paws.dax_operations.R'
    'paws.dax_package.R'
    'signer_v4.R'
    'paws.dax_service.R'
    'populate.R'
    'populateutil.R'
    'tags.R'
    'queryutil.R'
    'request.R'
    'signer_s3.R'
    'signer_s3v4.R'
    'signer_v2.R'
    'time.R'
    'util.R'
    'xmlutil.R'
