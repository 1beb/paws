Package: paws.acmpca
Title: AWS Certificate Manager Private Certificate Authority
Version: 0.0.0.9000
Authors@R: 
    c(person(given = "David",
             family = "Kretch",
             role = c("aut", "cre"),
             email = "david.kretch@gmail.com"),
      person(given = "Adam",
             family = "Banker",
             role = "aut"))
Description: You can use the ACM PCA API to create a private
    certificate authority (CA). You must first call the
    CreateCertificateAuthority operation. If successful, the operation
    returns an Amazon Resource Name (ARN) for your private CA. Use this
    ARN as input to the GetCertificateAuthorityCsr operation to retrieve
    the certificate signing request (CSR) for your private CA certificate.
    Sign the CSR using the root or an intermediate CA in your on-premises
    PKI hierarchy, and call the ImportCertificateAuthorityCertificate to
    import your signed private CA certificate into ACM PCA.
License: Apache License (>= 2.0)
Depends: 
    R (>= 3.5.1)
Imports: 
    digest,
    httr,
    jsonlite,
    xml2,
    ini
Encoding: UTF-8
LazyData: true
Roxygen: list(markdown = TRUE)
RoxygenNote: 6.0.1
Collate: 
    'struct.R'
    'handlers.R'
    'url.R'
    'net.R'
    'credential_providers.R'
    'credentials.R'
    'client.R'
    'config.R'
    'convert.R'
    'dateutil.R'
    'defaults.R'
    'error.R'
    'handlers_core.R'
    'handlers_ec2query.R'
    'handlers_jsonrpc.R'
    'handlers_query.R'
    'handlers_rest.R'
    'handlers_restjson.R'
    'idempotency.R'
    'jsonutil.R'
    'paws.acmpca_interfaces.R'
    'paws.acmpca_operations.R'
    'paws.acmpca_package.R'
    'paws.acmpca_service.R'
    'populate.R'
    'populateutil.R'
    'type.R'
    'queryutil.R'
    'request.R'
    'signer_v4.R'
    'time.R'
    'xmlutil.R'
