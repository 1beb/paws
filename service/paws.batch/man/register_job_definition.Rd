% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.batch_operations.R
\name{register_job_definition}
\alias{register_job_definition}
\title{Registers an AWS Batch job definition}
\usage{
register_job_definition(jobDefinitionName, type, parameters = NULL,
  containerProperties = NULL, retryStrategy = NULL, timeout = NULL)
}
\arguments{
\item{jobDefinitionName}{The name of the job definition to register. Up to 128 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.}

\item{type}{The type of job definition.}

\item{parameters}{Default parameter substitution placeholders to set in the job definition. Parameters are specified as a key-value pair mapping. Parameters in a \code{SubmitJob} request override any corresponding parameter defaults from the job definition.}

\item{containerProperties}{An object with various properties specific for container-based jobs. This parameter is required if the \code{type} parameter is \code{container}.}

\item{retryStrategy}{The retry strategy to use for failed jobs that are submitted with this job definition. Any retry strategy that is specified during a SubmitJob operation overrides the retry strategy defined here. If a job is terminated due to a timeout, it is not retried.}

\item{timeout}{The timeout configuration for jobs that are submitted with this job definition, after which AWS Batch terminates your jobs if they have not finished. If a job is terminated due to a timeout, it is not retried. The minimum value for the timeout is 60 seconds. Any timeout configuration that is specified during a SubmitJob operation overrides the timeout configuration defined here. For more information, see \href{http://docs.aws.amazon.com/AmazonECS/latest/developerguide/job_timeouts.html}{Job Timeouts} in the \emph{Amazon Elastic Container Service Developer Guide}.}
}
\description{
Registers an AWS Batch job definition.
}
\examples{
# This example registers a job definition for a simple container job.
register_job_definition(
  type = "container",
  containerProperties = list(
    command = list(
      "sleep",
      "10"
    ),
    image = "busybox",
    memory = 128L,
    vcpus = 1L
  ),
  jobDefinitionName = "sleep10"
)

}
