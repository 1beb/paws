% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.sagemaker_operations.R
\name{create_transform_job}
\alias{create_transform_job}
\title{Starts a transform job}
\usage{
create_transform_job(TransformJobName, ModelName, TransformInput,
  TransformOutput, TransformResources, MaxConcurrentTransforms = NULL,
  MaxPayloadInMB = NULL, BatchStrategy = NULL, Environment = NULL,
  Tags = NULL)
}
\arguments{
\item{TransformJobName}{The name of the transform job. The name must be unique within an AWS Region in an AWS account.}

\item{ModelName}{The name of the model that you want to use for the transform job. \code{ModelName} must be the name of an existing Amazon SageMaker model within an AWS Region in an AWS account.}

\item{TransformInput}{Describes the input source and the way the transform job consumes it.}

\item{TransformOutput}{Describes the results of the transform job.}

\item{TransformResources}{Describes the resources, including ML instance types and ML instance count, to use for the transform job.}

\item{MaxConcurrentTransforms}{The maximum number of parallel requests that can be sent to each instance in a transform job. This is good for algorithms that implement multiple workers on larger instances . The default value is \code{1}. To allow Amazon SageMaker to determine the appropriate number for \code{MaxConcurrentTransforms}, set the value to \code{0}.}

\item{MaxPayloadInMB}{The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata). The value in \code{MaxPayloadInMB} must be greater or equal to the size of a single record. You can approximate the size of a record by dividing the size of your dataset by the number of records. Then multiply this value by the number of records you want in a mini-batch. It is recommended to enter a value slightly larger than this to ensure the records fit within the maximum payload size. The default value is \code{6} MB. For an unlimited payload size, set the value to \code{0}.}

\item{BatchStrategy}{Determines the number of records included in a single mini-batch. \code{SingleRecord} means only one record is used per mini-batch. \code{MultiRecord} means a mini-batch is set to contain as many records that can fit within the \code{MaxPayloadInMB} limit.

Batch transform will automatically split your input data into whatever payload size is specified if you set \code{SplitType} to \code{Line} and \code{BatchStrategy} to \code{MultiRecord}. There's no need to split the dataset into smaller files or to use larger payload sizes unless the records in your dataset are very large.}

\item{Environment}{The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.}

\item{Tags}{An array of key-value pairs. Adding tags is optional. For more information, see \href{http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what}{Using Cost Allocation Tags} in the \emph{AWS Billing and Cost Management User Guide}.}
}
\description{
Starts a transform job. A transform job uses a trained model to get inferences on a dataset and saves these results to an Amazon S3 location that you specify.
}
\details{
To perform batch transformations, you create a transform job and use the data that you have readily available.

In the request body, you provide the following:
\itemize{
\item \code{TransformJobName} - Identifies the transform job. The name must be unique within an AWS Region in an AWS account.
\item \code{ModelName} - Identifies the model to use. \code{ModelName} must be the name of an existing Amazon SageMaker model in the same AWS Region and AWS account. For information on creating a model, see CreateModel.
\item \code{TransformInput} - Describes the dataset to be transformed and the Amazon S3 location where it is stored.
\item \code{TransformOutput} - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.
\item \code{TransformResources} - Identifies the ML compute instances for the transform job.
}

For more information about how batch transformation works Amazon SageMaker, see \href{http://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html}{How It Works}.
}
\examples{

}
